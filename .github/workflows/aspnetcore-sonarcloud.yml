# .github/workflows/aspnetcore-sonarcloud.yml
name: Build, Test, and Analyze with SonarCloud
on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:
jobs:
  build-test-analyze:
    name: Build, Test, and SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      
      - name: Restore dependencies
        run: dotnet restore SocialMediaAPI.sln
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Install SonarCloud scanner
        run: dotnet tool install --global dotnet-sonarscanner
      
      - name: Install coverlet tool
        run: dotnet tool install --global coverlet.console
      
      - name: Begin SonarCloud analysis
        run: |
          dotnet sonarscanner begin \
            /k:"${{ secrets.SONAR_PROJECT_KEY }}" \
            /o:"${{ secrets.SONAR_ORGANIZATION }}" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
            /d:sonar.cs.vstest.reportsPaths="**/TestResults/**/*.trx" \
            /d:sonar.coverage.exclusions="**Test*.cs,**/*Test.cs,**/*Tests.cs,**/*TestCase.cs,**/*.cshtml" \
            /d:sonar.verbose=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build
        run: dotnet build SocialMediaAPI.sln --no-restore --configuration Release
      
      - name: Test with Coverage
        run: |
          dotnet test SocialMediaAPI.sln --no-build --configuration Release \
            --collect:"XPlat Code Coverage" \
            --settings CodeCoverage.runsettings \
            --logger "trx;LogFileName=test-results.trx"
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: 1
      
      - name: Create CodeCoverage.runsettings file
        run: |
          cat > CodeCoverage.runsettings << 'EOL'
          <?xml version="1.0" encoding="utf-8"?>
          <RunSettings>
            <DataCollectionRunSettings>
              <DataCollectors>
                <DataCollector friendlyName="XPlat code coverage">
                  <Configuration>
                    <Format>opencover,cobertura</Format>
                    <Exclude>[*]*.Program,[*]*Startup,[*]*Migrations.*,[*]*Tests*</Exclude>
                    <IncludeTestAssembly>false</IncludeTestAssembly>
                  </Configuration>
                </DataCollector>
              </DataCollectors>
            </DataCollectionRunSettings>
          </RunSettings>
          EOL
        shell: bash
      
      - name: Debug - List coverage files
        run: find . -name "*.xml" -o -name "*.trx"
        shell: bash
      
      - name: End SonarCloud analysis
        run: |
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
