# .github/workflows/aspnetcore-sonarcloud.yml

name: Build, Test, and Analyze with SonarCloud

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build-test-analyze:
    name: Build, Test, and SonarCloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore SocialMediaAPI.sln
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install SonarCloud scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner

      - name: Install ReportGenerator
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Begin SonarCloud analysis
        run: |
          dotnet sonarscanner begin \
            /k:"${{ secrets.SONAR_PROJECT_KEY }}" \
            /o:"${{ secrets.SONAR_ORGANIZATION }}" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths="coveragereport/**/coverage.cobertura.xml" \
            /d:sonar.cs.vstest.reportsPaths="**/test-results.trx"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: dotnet build SocialMediaAPI.sln --no-restore --configuration Release

      - name: Test with Coverage
        run: |
          dotnet test SocialMediaAPI.sln --no-build --configuration Release \
            --collect:"XPlat Code Coverage" \
            --logger "trx;LogFileName=test-results.trx"
          # Generate Cobertura report from test coverage
          reportgenerator -reports:"**/coverage.cobertura.xml" -targetdir:"coveragereport" -reporttypes:"Cobertura"
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: 1

      - name: End SonarCloud analysis
        run: |
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
